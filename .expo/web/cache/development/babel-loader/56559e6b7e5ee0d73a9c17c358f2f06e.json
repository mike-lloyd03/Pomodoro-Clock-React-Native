{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/mikelloyd/Downloads/pomodoro-clock/App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Constants from 'expo-constants';\nvar incDecs = ['Session', 'Break'];\nimport Controls from \"./components/Controls\";\nimport IncDec from \"./components/IncDec\";\nimport Timer from \"./components/Timer\";\n\nvar Clock = function (_React$Component) {\n  _inherits(Clock, _React$Component);\n\n  var _super = _createSuper(Clock);\n\n  function Clock() {\n    var _this;\n\n    _classCallCheck(this, Clock);\n\n    _this = _super.call(this);\n    _this.state = {\n      sessionLength: 25 * 60,\n      breakLength: 5 * 60,\n      running: false,\n      phase: 'Session',\n      timeLeft: 25 * 60\n    };\n    _this.handleIncDec = _this.handleIncDec.bind(_assertThisInitialized(_this));\n    _this.handleControls = _this.handleControls.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Clock, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(props, prevState) {\n      console.log(prevState);\n\n      if (prevState.timeLeft == 0 && prevState.timeLeft != this.state.timeLeft) {\n        console.log(\"BEEP!\");\n\n        switch (prevState.phase) {\n          case 'Session':\n            this.setState({\n              phase: 'Break',\n              timeLeft: prevState.breakLength\n            });\n            break;\n\n          case 'Break':\n            this.setState({\n              phase: 'Session',\n              timeLeft: prevState.sessionLength\n            });\n            break;\n        }\n      } else if (prevState[prevState.phase.toLowerCase() + 'Length'] != this.state[this.state.phase.toLowerCase() + 'Length'] && !prevState.running) {\n        this.setState({\n          timeLeft: this.state[this.state.phase.toLowerCase() + 'Length']\n        });\n      }\n    }\n  }, {\n    key: \"handleIncDec\",\n    value: function handleIncDec(label, direction) {\n      this.setState(function (state) {\n        var phaseLength = label.toLowerCase() + 'Length';\n        var currentTime = state[label.toLowerCase() + 'Length'];\n        var newTime = currentTime + (direction == 'inc' ? 60 : -60);\n        return _defineProperty({}, phaseLength, newTime <= 0 ? 60 : newTime > 60 * 60 ? 60 * 60 : newTime);\n      });\n    }\n  }, {\n    key: \"handleControls\",\n    value: function handleControls(control) {\n      var _this2 = this;\n\n      switch (control) {\n        case 'Start':\n          this.setState({\n            running: true\n          });\n          this.timer = setInterval(function () {\n            return _this2.setState(function (state) {\n              return {\n                timeLeft: state.timeLeft - 1\n              };\n            });\n          }, 1000);\n          break;\n\n        case 'Stop':\n          clearInterval(this.timer);\n          this.setState({\n            running: false\n          });\n          break;\n\n        case 'Reset':\n          clearInterval(this.timer);\n          this.setState(function (state) {\n            return {\n              sessionLength: 25 * 60,\n              breakLength: 5 * 60,\n              running: false,\n              phase: 'Session',\n              timeLeft: 25 * 60\n            };\n          });\n      }\n\n      this.setState(function (state) {\n        return console.log(state);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var incDecComponents = incDecs.map(function (i) {\n        return React.createElement(IncDec, {\n          key: i,\n          name: i.toLowerCase(),\n          length: _this3.state[i.toLowerCase() + 'Length'],\n          clickHandler: _this3.handleIncDec,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 47\n          }\n        });\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, \"Pomodoro Clock\"), React.createElement(Timer, {\n        phase: this.state.phase,\n        timeLeft: this.state.timeLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }), incDecComponents, React.createElement(Controls, {\n        running: this.state.running,\n        clickHandler: this.handleControls,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Clock;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n    padding: 8\n  },\n  title: {\n    fontSize: 36,\n    textAlign: 'center'\n  }\n});\nexport default Clock;","map":{"version":3,"sources":["/Users/mikelloyd/Downloads/pomodoro-clock/App.js"],"names":["React","Constants","incDecs","Controls","IncDec","Timer","Clock","state","sessionLength","breakLength","running","phase","timeLeft","handleIncDec","bind","handleControls","props","prevState","console","log","setState","toLowerCase","label","direction","phaseLength","currentTime","newTime","control","timer","setInterval","clearInterval","incDecComponents","map","i","styles","container","title","Component","StyleSheet","create","flex","justifyContent","backgroundColor","padding","fontSize","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport Constants from 'expo-constants';\n\nconst incDecs = ['Session', 'Break']\n\n//import Beep from './components/Beep';\nimport Controls from './components/Controls'\nimport IncDec from './components/IncDec'\nimport Timer from './components/Timer'\n\nclass Clock extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      sessionLength: 25 * 60,\n      breakLength: 5 * 60,\n      running: false,\n      phase: 'Session',\n      timeLeft: 25 * 60\n    }\n    this.handleIncDec = this.handleIncDec.bind(this)\n    this.handleControls = this.handleControls.bind(this)\n  }\n  \n  componentDidUpdate (props, prevState) {\n    console.log(prevState)\n      if (prevState.timeLeft == 0 && prevState.timeLeft != this.state.timeLeft) {\n        //Figure out how to play audio here \n        console.log(\"BEEP!\")\n        \n        switch (prevState.phase) {\n          case 'Session':\n            this.setState(\n              {\n                phase: 'Break',\n                timeLeft: prevState.breakLength\n              }\n            ) \n            break\n          case 'Break':\n            this.setState(\n              {\n                phase: 'Session',\n                timeLeft: prevState.sessionLength\n              }\n            )\n            break\n        }\n      }\n    else if (prevState[prevState.phase.toLowerCase() + 'Length'] != this.state[this.state.phase.toLowerCase() + 'Length'] && !prevState.running ) {\n      this.setState({timeLeft: this.state[this.state.phase.toLowerCase() + 'Length']})\n    }\n  }\n  \n  handleIncDec(label, direction) {\n    this.setState(state => {\n      const phaseLength = label.toLowerCase() + 'Length'\n      const currentTime = state[label.toLowerCase() + 'Length']\n      const newTime = currentTime + (direction == 'inc' ? 60 : -60)\n      return {[phaseLength]: newTime <= 0 ? 60 : newTime > 60*60 ? 60*60 : newTime }\n      }\n    )\n    \n  }\n    \n  handleControls(control) {\n    switch(control) {\n      case 'Start':\n        this.setState({running: true })\n        this.timer = setInterval(() => this.setState(state => ({timeLeft: state.timeLeft - 1 })), 1000)\n        break\n        \n      case 'Stop':\n        clearInterval(this.timer)\n        this.setState({running: false})\n        break\n        \n      case 'Reset':\n        // document.getElementById('beep').pause()\n        // document.getElementById('beep').currentTime = 0\n        clearInterval(this.timer)\n        this.setState(state => \n          ({\n            sessionLength: 25 * 60,\n            breakLength: 5 * 60,\n            running: false,\n            phase: 'Session',\n            timeLeft: 25 * 60\n          })\n        )\n    }\n    this.setState(state => console.log(state))\n  }\n  \n  render() {\n    const incDecComponents = incDecs.map(i => <IncDec key={i} name={i.toLowerCase()} length={this.state[i.toLowerCase() + 'Length']} clickHandler={this.handleIncDec} />)\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Pomodoro Clock</Text>\n        <Timer phase={this.state.phase} timeLeft={this.state.timeLeft} />\n        {incDecComponents}\n        <Controls running={this.state.running} clickHandler={this.handleControls} />\n      </View>\n    )\n  }\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n  },\n  title: {\n    fontSize: 36,\n    textAlign: 'center'\n  },\n});\n\nexport default Clock"]},"metadata":{},"sourceType":"module"}